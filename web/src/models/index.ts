// Code generated by tygo. DO NOT EDIT.

//////////
// source: auth.go

/**
 * SignIn is ...
 */
export interface SignIn {
  email: string;
  password: string;
}

//////////
// source: sign.go

export interface Sign {
  error?: string;
  file_name?: string;
  file_name_signed?: string;
}

//////////
// source: template.go

export interface Template {
  id: string;
  folder_id: string;
  slug: string;
  name: string;
  source?: string;
  author?: Author;
  submitters: Submitters[];
  fields: Fields[];
  schema: Schema[];
  documents: Documents[];
  created_at: any /* time.Time */;
  updated_at: any /* time.Time */;
  archived_at?: any /* time.Time */;
}
export interface Author {
  id: string;
  first_name: string;
  last_name: string;
  email: string;
}
export interface Submitters {
  id: string;
  name: string;
}
export interface Fields {
  id: string;
  submitter_id: string;
  name: string;
  type: string;
  required: boolean;
  areas?: (Areas | undefined)[];
}
export interface Areas {
  attachment_id: string;
  page: number /* int */;
  x: number /* float64 */;
  y: number /* float64 */;
  w: number /* float64 */;
  z: number /* float64 */;
}
export interface Schema {
  attachment_id: string;
  name: string;
}
export interface Documents {
  id: string;
  url: string;
  filename: string;
  metadata: DocMetadata;
  preview_images: PreviewImages[];
}
export interface DocMetadata {
  analyzed?: boolean;
  pdf: Pdf;
  sha256?: string;
}
export interface Pdf {
  annotations: Annotations[];
  number_of_pages: number /* int */;
}
export interface Annotations {
  type: string;
  value: string;
  page: number /* int */;
  x: number /* float64 */;
  y: number /* float64 */;
  w: number /* float64 */;
  z: number /* float64 */;
}
export interface PreviewImages {
  id: string;
  name: string;
  record_type?: string;
  record_id?: string;
  blob_id?: string;
  url: string;
  metadata: ImgMetadata;
  filename: string;
  created_at: any /* time.Time */;
}
export interface ImgMetadata {
  analyzed?: boolean;
  identified?: boolean;
  width: number /* int */;
  height: number /* int */;
}

//////////
// source: user.go

export type UserRole = number /* int */;
export const UserRoleViewer: UserRole = 0;
export const UserRoleSigner: UserRole = 1;
export const UserRoleAdmin: UserRole = 2;
export interface User {
  id: string;
  name: string;
  email: string;
  password: string;
  CreatedAt: any /* time.Time */;
}

//////////
// source: verify.go

export interface Verify {
  verify: boolean;
  error?: string;
  document?: Document;
  signers: (Signer | undefined)[];
}
export interface Document {
  creator: string;
  hash: string;
}
export interface Signer {
  name: string;
  reason: string;
  valid_signature: boolean;
  trusted_issuer: boolean;
  cert_subject?: CertSubject;
  sig_format: string;
  revoked_certificate: boolean;
  time_stamp?: TimeStamp;
}
export interface TimeStamp {
  time: number /* int64 */;
}
export interface CertSubject {
  organization: string[];
  common_name: string;
}
