networks:
  public:
    driver: bridge
  private:
    #internal: true
    driver: bridge
    ipam:
      config:
        - subnet: 10.21.0.0/16
          gateway: 10.21.0.1

volumes:
  postgres_data: {}
  redis_data: {}
  minio_data: {}

x-logging: &default-logging
  driver: json-file
  options:
    max-size: "20M"
    max-file: "10"
    tag: "{{.ImageName}}|{{.Name}}"

services:
  postgres:
    image: postgres:17-alpine
    container_name: service.postgres
    restart: always
    ports:
      - 15432:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-goSign}
      POSTGRES_DB: ${POSTGRES_DB:-goSign}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgresPassword}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-goSign}"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - private
    logging: *default-logging

  redis:
    image: redis:7-alpine
    container_name: service.redis
    restart: always
    ports:
      - 16379:6379
    volumes:
      - redis_data:/data
    command: redis-server --requirepass "${REDIS_PASSWORD:-redisPassword}"
    networks:
      - private
    logging: *default-logging

  minio:
    image: minio/minio:latest
    container_name: service.minio
    restart: always
    ports:
      - 9000:9000  # API port
      - 9001:9001  # Console port
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - private
    logging: *default-logging

  # MinIO client for automatic bucket creation
  minio-init:
    image: minio/mc:latest
    container_name: service.minio-init
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:9000 ${MINIO_ROOT_USER:-minioadmin} ${MINIO_ROOT_PASSWORD:-minioadmin};
      /usr/bin/mc mb --ignore-existing myminio/gosign;
      /usr/bin/mc policy set download myminio/gosign;
      exit 0;
      "
    networks:
      - private

  mailhog:
    image: mailhog/mailhog:latest
    container_name: service.mailhog
    restart: always
    ports:
      - 1025:1025  # SMTP port
      - 8025:8025  # Web UI port
    networks:
      - private
    logging: *default-logging
